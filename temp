--- 
   uint32_t ebp = read_ebp(), eip = read_eip();

    for (int i = 0; ebp != 0 && i < STACKFRAME_DEPTH; i ++) {
        cprintf("ebp: 0x%08x eip: 0x%08x args:", ebp, eip);
        uint32_t *args = (uint32_t *)ebp + 2;
        for (int j = 0; j < 4; j ++) {
            cprintf("0x%08x ", args[j]);
        }
        cprintf("\n");
        print_debuginfo(eip - 1);
        eip = ((uint32_t *)ebp)[1];
        ebp = ((uint32_t *)ebp)[0];
    }	
---
        ticks ++;
        if (ticks % TICK_NUM == 0) {
            print_ticks();
        }
---
    extern uintptr_t __vectors[];
    for (int i = 0; i < sizeof(idt) / sizeof(struct gatedesc); i ++) {
        SETGATE(idt[i], 0, GD_KTEXT, __vectors[i], DPL_KERNEL);
    }
    SETGATE(idt[T_SWITCH_TOK], 0, GD_KTEXT, __vectors[T_SWITCH_TOK], DPL_USER);
    lidt(&idt_pd);

